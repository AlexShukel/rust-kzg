From fd9fa9700d975053dcc237ec9913e3e519b10dff Mon Sep 17 00:00:00 2001
From: sirse <artiom.tretjakovas2@gmail.com>
Date: Thu, 16 May 2024 12:46:48 +0300
Subject: [PATCH] Patch rust bindings

---
 Cargo.toml             |  1 +
 bindings/rust/build.rs | 22 +++-------------------
 2 files changed, 4 insertions(+), 19 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index fb39739..37e262d 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -1,3 +1,4 @@
+[workspace]
 [package]
 name = "c-kzg"
 version = "1.0.2"
diff --git a/bindings/rust/build.rs b/bindings/rust/build.rs
index 1b19f71..911bbc9 100644
--- a/bindings/rust/build.rs
+++ b/bindings/rust/build.rs
@@ -9,24 +9,7 @@ fn main() {
 
     let c_src_dir = root_dir.join("src");
 
-    let mut cc = cc::Build::new();
-
-    #[cfg(all(windows, target_env = "msvc"))]
-    {
-        cc.flag("-D_CRT_SECURE_NO_WARNINGS");
-
-        // In blst, if __STDC_VERSION__ isn't defined as c99 or greater, it will typedef a bool to
-        // an int. There is a bug in bindgen associated with this. It assumes that a bool in C is
-        // the same size as a bool in Rust. This is the root cause of the issues on Windows. If/when
-        // this is fixed in bindgen, it should be safe to remove this compiler flag.
-        cc.flag("/std:c11");
-    }
-
-    cc.include(blst_headers_dir.clone());
-    cc.warnings(false);
-    cc.file(c_src_dir.join("c_kzg_4844.c"));
-
-    cc.try_compile("ckzg").expect("Failed to compile ckzg");
+    let rust_kzg_target_dir = root_dir.join("../../target/release/");
 
     #[cfg(feature = "generate-bindings")]
     {
@@ -43,7 +26,8 @@ fn main() {
     }
 
     // Finally, tell cargo this provides ckzg/ckzg_min
-    println!("cargo:rustc-link-lib=ckzg");
+    println!("cargo:rustc-link-search={}", rust_kzg_target_dir.display());
+    println!("cargo:rustc-link-arg=-l:rust_kzg_arkworks.a");
 }
 
 #[cfg(feature = "generate-bindings")]
-- 
2.34.1

