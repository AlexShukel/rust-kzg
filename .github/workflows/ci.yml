name: CI Build

on: [push]

jobs:
  ci:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: clippy, rustfmt

# 4th team #########################################################

    - name: "[ckzg] Build native libs for Linux"
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "LIBOMP_PATH=$(find /usr/lib/llvm* -name libiomp5.so | head -n 1)" >> $GITHUB_ENV
        cd ckzg && bash build.sh

    - name: "[ckzg] Build native libs for MacOS"
      if: matrix.os == 'macos-11'
      run: |
        brew install gnu-sed
        cd ckzg && bash build.sh

    - name: "[ckzg] Setup Env"
      run: |
        if [[ -z "$LIBOMP_PATH" ]]; then
          echo "FAIL: libiomp5.so was not found"
          exit 1
        fi
        echo "RUSTFLAGS=-C link-arg="$LIBOMP_PATH"" >> $GITHUB_ENV

    - name: "[ckzg] Test"
      uses: actions-rs/cargo@v1
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11'
      with:
        command: test
        args: --manifest-path ckzg/Cargo.toml

    - name: "[ckzg] Bench"
      uses: actions-rs/cargo@v1
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11'
      with:
        command: bench
        args: --manifest-path ckzg/Cargo.toml

    - name: "[ckzg] Clippy"
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --manifest-path ckzg/Cargo.toml --all-targets --all-features -- -D warnings

    - name: "[ckzg] Fmt"
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --manifest-path ckzg/Cargo.toml

    - name: "[ckzg] Unset Env"
      run: |
        echo "RUSTFLAGS=" >> $GITHUB_ENV
        echo "LIBOMP_PATH=" >> $GITHUB_ENV

# Common ###########################################################

    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --manifest-path kzg-bench/Cargo.toml
