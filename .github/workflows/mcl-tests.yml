name: mcl tests

on: [push, workflow_dispatch]

env:
  C_KZG_4844_GIT_HASH: '9059ba5ae2909d5e8109b873d983ff162c8adbb4'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install py_ecc
          pip install PyYAML

      - uses: actions/setup-go@v2
        with:
          go-version: ^1.19

      - name: "[mcl10-rust] Build native libs for Linux"
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd mcl/kzg && bash build.sh

      - name: "[mcl10-rust] Tests"
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: shared_tests --manifest-path mcl/kzg-bench/Cargo.toml --no-fail-fast -- --test-threads 1

      - name: "[mcl10-rust] Tests (parallel)"
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: shared_tests --manifest-path mcl/kzg-bench/Cargo.toml --no-fail-fast --features mcl_rust/parallel -- --test-threads 1

      #- name: "[mcl10-rust] Tests (c-kzg-4844)"
      #  if: matrix.os == 'ubuntu-latest'
      #  run: |
      #    cd mcl/kzg && bash run-c-kzg-4844-tests.sh

      #- name: "[mcl10-rust] Tests (c-kzg-4844 parallel)"
      #  if: matrix.os == 'ubuntu-latest'
      #  run: |
      #    cd mcl/kzg && bash run-c-kzg-4844-tests.sh --parallel

      - name: "[mcl10-rust] Clippy"
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path mcl/kzg/Cargo.toml --all-targets --all-features -- -D warnings

      - name: "[mcl10-rust] Formatting"
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path mcl/kzg/Cargo.toml -- --check

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path kzg-bench/Cargo.toml -- --check
